[buildout]
appname = myapp
appspotname = myappspotname
appspotversion = 1
parts =
    wrapper
    app.py
    app.yaml
    patches
unzip = true
versions = versions

develop = src/myapp

[versions]
pyramid = 1.1

[wrapper]
recipe = rod.recipe.appengine
use_setuptools_pkg_resources = True
zip-packages = False
exclude = tests
eggs = ${buildout:appname}
###
# For rod.recipe.appengine to work, one must explicitly list all packages,
# which should exist in the appengine environment for pyramid application to
# work
packages =
    chameleon
    mako
    markupsafe
    paste
    pastescript
    ordereddict
    pyramid
    pyramid-zcml
    repoze.lru
    simplejson
    translationstring
    venusian
    zope.component
    zope.configuration
    zope.deprecation
    zope.event
    zope.i18nmessageid
    zope.interface
    zope.schema
    ${buildout:appname}
url = http://googleappengine.googlecode.com/files/google_appengine_1.5.3.zip

[app.py]
recipe = z3c.recipe.template
input = ${buildout:directory}/templates/app.py.in
output = ${buildout:parts-directory}/wrapper/app.py

[app.yaml]
recipe = z3c.recipe.template
input = ${buildout:directory}/templates/app.yaml.in
output = ${buildout:parts-directory}/wrapper/app.yaml

[patches]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ###
    # FIXME: pyramid_zcml requires PasteScript and our recipe symlinks its
    # modules under parts/wrapper/paste/script. Unfortunately, when
    # paste.script.command is expects setuptools to find actual PasteScript
    # installed and we get an error.  I do not know, how to fix that, so I just
    # comment out those lines on command.py.
    patch -N ${buildout:parts-directory}/wrapper/paste/script/command.py paste.script.command.diff
    ## Hide buildout warnings about "unused" variables
    # ${buildout:appspotname} ${buildout:appspotversion}
