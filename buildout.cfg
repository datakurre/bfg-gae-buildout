[buildout]
develop = .
    src/myapp
parts =
    wrapper
    patches
eggs =
    myapp
find-links = http://dist.repoze.org/bfg/1.2/simple/
unzip = true

[wrapper]
recipe = rod.recipe.appengine
zip-packages = False
exclude = tests
###
# For rod.recipe.appengine to work, one must explicitly list
# all eggs, which should exist in the appengine environment
# for repoze.bfg application to work
packages =
    chameleon
    translationstring
    repoze.bfg
    repoze.lru
    venusian
    zope.i18nmessageid
    zope.configuration
    zope.deprecation
    zope.component
    zope.interface
    zope.schema
    zope.event
    paste
    simplejson
    ordereddict
    ${buildout:eggs}
url = http://googleappengine.googlecode.com/files/google_appengine_1.5.0.zip

[patches]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ###
    # rod.recipe.appengine inserts dummy pkg_resources into 
    # parts/wrapper/pkg_resources, but it seems that bfg.repoze
    # requires a real one to work
    wget http://svn.python.org/projects/sandbox/trunk/setuptools/pkg_resources.py -O ${buildout:parts-directory}/wrapper/pkg_resources.py
    ### 
    # Apperently there are still some incompatibilities between
    # pkg_resources and googleappengine and those can be avoided
    # by using appengine_monkey 
    # http://code.google.com/p/googleappengine/issues/detail?id=60
    wget http://appengine-monkey.googlecode.com/svn/trunk/appengine_monkey.py -O ${buildout:parts-directory}/wrapper/appengine_monkey.py